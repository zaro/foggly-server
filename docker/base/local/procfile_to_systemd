#!/bin/bash

if [[ -z "$RUNTIME_UNIT_DIR" ]]; then
  RUNTIME_UNIT_DIR="/run/systemd/system"
  RUNTIME_UNIT_DIR_CLEAN="yes"
fi

if [[ -f /usr/local/procfile_to_systemd.f ]]; then
. /usr/local/procfile_to_systemd.f
fi


if [ "$(type -t procfile_comand)" != "function" ]; then
  function procfile_comand {
    echo /usr/local/bin/runenv "$@"
  }
fi

function procfile_entry_to_systemd {
  NAME="$1"
  CMD="$2"
  FILE="${RUNTIME_UNIT_DIR}/${NAME}.service"
  echo "Systemd entry [${NAME}]:'${CMD}'"
  COMMAND=$(procfile_comand "$CMD")

cat > "${FILE}" <<END_OF_UNIT
[Unit]
Description=Service for ${NAME} Procfile entry
After=network.target

[Service]
ExecStart=${COMMAND}
WorkingDirectory=${ROOT_DIR}/www
SyslogIdentifier=${NAME}
Restart=always
User = www-data
Group = www-data
EnvironmentFile=/srv/home/.hostcfg

[Install]
WantedBy=multi-user.target

$(procfile_entry_append "${NAME}" "${CMD}")
END_OF_UNIT

ln -sf "${FILE}" "${RUNTIME_UNIT_DIR}/multi-user.target.wants/${NAME}.service"
}

if [ "$(type -t procfile_entry)" != "function" ]; then
  function procfile_entry {
    return 1
  }
fi

if [ "$(type -t procfile_entry_append)" != "function" ]; then
  function procfile_entry_append {
    echo "# Generated for Profile entry $1:$2"
    return 0
  }
fi

if [ "$(type -t procfiles_clean)" != "function" ]; then
  function procfiles_clean {
    rm -f /run/systemd/system/*.service
    mkdir -p "${RUNTIME_UNIT_DIR}/multi-user.target.wants/"
    if [[ "$RUNTIME_UNIT_DIR_CLEAN" ]]; then
      rm -f ${RUNTIME_UNIT_DIR}/*.service
    fi
  }
fi

function procfile_process {
  if [ -r Procfile ]; then
    procfiles_clean
    while IFS='' read -r line || [[ -n "$line" ]]; do
        if [[ $line =~ ^([a-zA-Z0-9]+):[[:space:]]*(.*)$ ]]; then
            ENTRY_NAME="${BASH_REMATCH[1]}"
            ENTRY_TEXT="${BASH_REMATCH[2]}"
            if ! procfile_entry "${ENTRY_NAME}" "${ENTRY_TEXT}"; then
              procfile_entry_to_systemd "${ENTRY_NAME}" "${ENTRY_TEXT}"
            fi
        fi
    done < Procfile
  fi
}
